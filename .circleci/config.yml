version: 2.1

orbs:

    jq: circleci/jq@1.9.1

aliases:

    - &prod-context
      context: auth-token

    - &docker_container
      docker:
        - image: cimg/base:2020.01

    - &filter_dev
      filters:
        branches:
            only:
                - dev

jobs:
    echo_envvars:
        <<: *docker_container
        description: echo required variables
        steps:
            - run:
                command: |
                    echo "echo-ing required vars"
                    echo "GITHUB_TOKEN: ${GITHUB_TOKEN}"
    create_github_pr:
        <<: *docker_container
        description: Create a pull request for the next branch
        steps:
            - jq/install
            - checkout
            - run:
                name: Setup GitHub hub
                command: |
                    wget $(curl -s https://api.github.com/repos/github/hub/releases/latest | grep -o 'https://.*hub-linux-amd64.*tgz')
                    tar zxf hub-linux-amd64-*.tgz
                    HUBPATH=$(find . -maxdepth 1 -type d | sort | grep hub-linux)
                    if which sudo > /dev/null; then
                        sudo $HUBPATH/install
                    else
                        $HUBPATH/install
                    fi
                    rm -rf $HUBPATH
                    rm -rf hub-linux-amd64-*.tgz
            - run: 
                name: Create Pull Request
                command: |
                    RESPONSE=$(curl "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls?state=closed&base=dev" -H "Authorization: token ${GITHUB_TOKEN}")

                    echo $(echo $RESPONSE | jq -r '.[0].title')" (dev -> master)" > message
                    echo "" >> message
                    echo $RESPONSE | jq -r '.[0].body' >> message

                    hub pull-request -b master -h $CIRCLECI_USER:dev -F message

workflows:
    version_branch:
        jobs:
            - echo_envvars:
                <<: *prod-context
                <<: *filter_dev
            - create_github_pr:
                <<: *prod-context
                <<: *filter_dev
                requires:
                    - echo_envvars
                    - prod_approval
            - prod_approval:
                type: approval
                requires:
                  - echo_envvars