version: 2.1

orbs:

    jq: circleci/jq@1.9.1

aliases:

    - &prod-context
      context: auth-token

    - &docker_container
      docker:
        - image: cimg/base:2020.01

    - &filter_dev
      filters:
        branches:
            only:
                - dev

jobs:
    echo_envvars:
        <<: *docker_container
        description: echo required variables
        steps:
            - run:
                command: |
                    echo "echo-ing required vars"
                    echo "GITHUB_TOKEN: ${GITHUB_TOKEN}"
    create_github_pr:
        <<: *docker_container
        description: Create a pull request for the next branch
        steps:
            - jq/install
            - run:
                name: Setup GitHub hub
                command: |
                    wget $(curl -s https://api.github.com/repos/github/hub/releases/latest | grep -o 'https://.*hub-linux-amd64.*tgz')
                    tar zxf hub-linux-amd64-*.tgz
                    HUBPATH=$(find . -maxdepth 1 -type d | sort | grep hub-linux)
                    if which sudo > /dev/null; then
                        sudo $HUBPATH/install
                    else
                        $HUBPATH/install
                    fi
                    rm -rf $HUBPATH
                    rm -rf hub-linux-amd64-*.tgz
            - checkout
            - run: 
                name: Create Pull Request
                command: |
                    hub pr show -f %t" ($CIRCLE_BRANCH -> master)"%n%n%b $(hub pr list -s closed -b $CIRCLE_BRANCH -L 1 -f %I) > message
                    PULLREQUEST=$(hub pr list -s open -b master -h $CIRCLE_BRANCH -L1 -f %I)
                    if [ -z "${PULLREQUEST}" ]; then
                      hub pull-request -b master -h $CIRCLECI_USER:$CIRCLE_BRANCH -F message
                    else
                      jq -Rs --rawfile body message '{"body":$body}' message > message.json
                      hub api repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/issues/$PULLREQUEST/comments -F body --input message.json
                    fi

workflows:
    version_branch:
        jobs:
            - echo_envvars:
                <<: *prod-context
                <<: *filter_dev
            - create_github_pr:
                <<: *prod-context
                <<: *filter_dev
                requires:
                    - echo_envvars
                    - prod_approval
            - prod_approval:
                type: approval
                requires:
                  - echo_envvars