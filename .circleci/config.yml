version: 2.1

orbs:
    hub: mattvanstone/hub@0.2.0
    jq: circleci/jq@1.9.1

aliases:
    - &prod-context
      context: auth-token

    - &docker_container
      docker:
        - image: cimg/base:2020.01

    - &filter_dev
      filters:
        branches:
            only:
                - dev

jobs:
    echo_envvars:
        <<: *docker_container
        description: echo required variables
        steps:
            - run:
                command: |
                    echo "echo-ing required vars"
                    echo "GITHUB_TOKEN: ${GITHUB_TOKEN}"

    create_github_pr:
        <<: *docker_container
        description: Create a pull request for the next branch
        parameters:
          base:
            description: The name of the branch to use as the base for the pull request
            type: string
        steps:
            - jq/install
            - hub/install
            - checkout
            - run: 
                name: Create Pull Request
                command: |
                    PULLREQUEST=$(hub pr list -s open -b << parameters.base >> -h $CIRCLE_BRANCH -L1 -f %I)
                    if [ -z "${PULLREQUEST}" ]; then
                      hub pr show -f %t" ($CIRCLE_BRANCH -> << parameters.base >>)"%n%n%b $(hub pr list -s closed -b $CIRCLE_BRANCH -L 1 -f %I) > message
                      hub pull-request -b << parameters.base >> -h $CIRCLECI_USER:$CIRCLE_BRANCH -F message -d
                    else
                      hub pr show -f "Merged #"%I": "%t%n%n%b $(hub pr list -s closed -b $CIRCLE_BRANCH -L 1 -f %I) > message
                      jq -Rs --rawfile body message '{"body":$body}' message > message.json
                      hub api repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/issues/$PULLREQUEST/comments -F body --input message.json
                    fi

workflows:
    version_branch:
        jobs:
            - echo_envvars:
                <<: *prod-context
                <<: *filter_dev
            - create_github_pr:
                <<: *prod-context
                <<: *filter_dev
                base: master
                requires:
                    - echo_envvars
                    #- prod_approval
            # - prod_approval:
            #     type: approval
            #     requires:
            #       - echo_envvars